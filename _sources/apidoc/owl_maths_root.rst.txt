Maths_root
===============================================================================

This document is auto-generated for Owl's APIs.
#8 entries have been extracted.

Github:
`{Signature} <https://github.com/ryanrhymes/owl/tree/master/src/base/maths/owl_maths_root.mli>`_ 
`{Implementation} <https://github.com/ryanrhymes/owl/tree/master/src/base/maths/owl_maths_root.ml>`_



Type definition
-------------------------------------------------------------------------------



.. code-block:: ocaml

  type solver =
    | Bisec
    | FalsePos
    | Ridder
    | Brent 

Type of root functions of univariate functions.

Core functions
-------------------------------------------------------------------------------



Root of univariate functions
-------------------------------------------------------------------------------



.. code-block:: ocaml

  val bisec : ?max_iter:int -> ?xtol:float -> (float -> float) -> float -> float -> float

``bisec f a b`` tries to find the root of univariate function ``f`` in the
bracket defined by ``[a, b]``.

Parameters:
  * ``max_iter``: maximum number of iterations.
  * ``xtol``: the tolerance of ``x`` on abscissa.
  * ``f``: the univariate scalar function to find root.
  * ``a``: boundary of bracket.
  * ``b``: boundary of bracket.

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_maths_root.ml#L18>`__



.. code-block:: ocaml

  val ridder : ?max_iter:int -> ?xtol:float -> (float -> float) -> float -> float -> float

``ridder f a b`` tries to find the root of univariate function ``f`` in the
bracket defined by ``[a, b]``.

Parameters:
  * ``max_iter``: maximum number of iterations.
  * ``xtol``: the tolerance of ``x`` on abscissa.
  * ``f``: the univariate scalar function to find root.
  * ``a``: boundary of bracket.
  * ``b``: boundary of bracket.

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_maths_root.ml#L94>`__



.. code-block:: ocaml

  val brent : ?max_iter:int -> ?xtol:float -> (float -> float) -> float -> float -> float

``brent f a b`` tries to find the root of univariate function ``f`` in the
bracket defined by ``[a, b]``.

Parameters:
  * ``max_iter``: maximum number of iterations.
  * ``xtol``: the tolerance of ``x`` on abscissa.
  * ``f``: the univariate scalar function to find root.
  * ``a``: boundary of bracket.
  * ``b``: boundary of bracket.

Refer to :cite:`brent2013algorithms`

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_maths_root.ml#L144>`__



Helper functions
-------------------------------------------------------------------------------



