Computation.Symbol
===============================================================================

This document is auto-generated for Owl's APIs.
#57 entries have been extracted.

Github:
`{Signature} <https://github.com/ryanrhymes/owl/tree/master/src/base/compute/owl_computation_symbol_sig.ml>`_ 
`{Implementation} <https://github.com/ryanrhymes/owl/tree/master/src/base/compute/owl_computation_symbol.ml>`_



Core functions
-------------------------------------------------------------------------------



.. code-block:: ocaml

  val op_to_str : op -> string

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L18>`__



.. code-block:: ocaml

  val is_random_variable : op -> bool

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L223>`__



.. code-block:: ocaml

  val refnum : 'a Owl_graph.node -> int

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L230>`__



.. code-block:: ocaml

  val node_shape : attr Owl_graph.node -> int array

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L232>`__



.. code-block:: ocaml

  val node_numel : attr Owl_graph.node -> int

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L242>`__



.. code-block:: ocaml

  val is_shape_unknown : attr Owl_graph.node -> bool

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L244>`__



.. code-block:: ocaml

  val infer_shape_graph : attr Owl_graph.node array -> unit

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L251>`__



.. code-block:: ocaml

  val shape_to_str : int array option array -> string

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L262>`__



.. code-block:: ocaml

  val node_to_str : attr Owl_graph.node -> string

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L274>`__



.. code-block:: ocaml

  val node_to_arr : t -> arr

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L290>`__



.. code-block:: ocaml

  val arr_to_node : arr -> t

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L292>`__



.. code-block:: ocaml

  val node_to_elt : t -> elt

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L296>`__



.. code-block:: ocaml

  val elt_to_node : elt -> t

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L298>`__



.. code-block:: ocaml

  val var_arr : ?shape:int array -> string -> arr

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L380>`__



.. code-block:: ocaml

  val var_elt : string -> elt

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L384>`__



.. code-block:: ocaml

  val const_arr : string -> A.arr -> arr

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L388>`__



.. code-block:: ocaml

  val const_elt : string -> A.elt -> elt

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L395>`__



.. code-block:: ocaml

  val new_block_id : unit -> int

``new_block_id ()`` returns an unused block id.

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L302>`__



.. code-block:: ocaml

  val make_empty_block : ?block_id:int -> int -> block

``make_empty_block s`` returns an empty block of memory of size ``s``.

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L310>`__



.. code-block:: ocaml

  val make_value_block : value -> attr Owl_graph.node -> unit

``make_value_block value node`` creates a block of memory initialised with
  ``value`` and links the new block to ``node``.

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L322>`__



.. code-block:: ocaml

  val get_block : attr Owl_graph.node -> block array

``get_block node`` returns the memory block allocated to ``node``.
  If no block is allocated, throws an exception.

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L408>`__



.. code-block:: ocaml

  val add_node_to_block : attr Owl_graph.node -> block -> unit

Link a node to a reusable block and initialises its memory on the memory of
  the block.

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L416>`__



.. code-block:: ocaml

  val get_active_node : block -> attr Owl_graph.node option

Return the node that is currently using the memory of the block.

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L427>`__



.. code-block:: ocaml

  val set_active_node : block -> attr Owl_graph.node -> unit

Update the node that is currently using the block of memory.

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L429>`__



.. code-block:: ocaml

  val get_block_id : attr Owl_graph.node -> int

``get_block_id node`` returns the id of the block assigned to ``node``. If
  ``node`` has not been assigned yet, returns ``-1``.

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L431>`__



.. code-block:: ocaml

  val set_value : attr Owl_graph.node -> value array -> unit

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L437>`__



.. code-block:: ocaml

  val get_value : attr Owl_graph.node -> value array

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L454>`__



.. code-block:: ocaml

  val set_operator : attr Owl_graph.node -> op -> unit

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L456>`__



.. code-block:: ocaml

  val get_operator : attr Owl_graph.node -> op

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L458>`__



.. code-block:: ocaml

  val set_reuse : attr Owl_graph.node -> bool -> unit

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L460>`__



.. code-block:: ocaml

  val get_reuse : attr Owl_graph.node -> bool

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L467>`__



.. code-block:: ocaml

  val is_shared : attr Owl_graph.node -> bool

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L469>`__



.. code-block:: ocaml

  val get_shared_nodes : attr Owl_graph.node -> attr Owl_graph.node array

``get_shared_nodes node`` returns the nodes sharing the same block of memory
  as ``node``.

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L479>`__



.. code-block:: ocaml

  val is_var : attr Owl_graph.node -> bool

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L485>`__



.. code-block:: ocaml

  val is_const : attr Owl_graph.node -> bool

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L487>`__



.. code-block:: ocaml

  val is_node_arr : attr Owl_graph.node -> bool

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L490>`__



.. code-block:: ocaml

  val is_node_elt : attr Owl_graph.node -> bool

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L497>`__



.. code-block:: ocaml

  val is_assigned : attr Owl_graph.node -> bool

``is_assigned node`` checks if a block of memory has been assigned to
  ``node``.

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L504>`__



.. code-block:: ocaml

  val check_assigned : attr Owl_graph.node -> unit

``check_assigned node`` throws an exception if ``node`` has not been
  assigned to a block.

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L510>`__



.. code-block:: ocaml

  val is_valid : attr Owl_graph.node -> bool

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L517>`__



.. code-block:: ocaml

  val validate : attr Owl_graph.node -> unit

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L519>`__



.. code-block:: ocaml

  val invalidate : attr Owl_graph.node -> unit

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L521>`__



.. code-block:: ocaml

  val invalidate_graph : attr Owl_graph.node -> unit

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L523>`__



.. code-block:: ocaml

  val is_freeze : attr Owl_graph.node -> bool

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L525>`__



.. code-block:: ocaml

  val freeze : attr Owl_graph.node -> unit

TODO

.. code-block:: ocaml

  val freeze_descendants : attr Owl_graph.node array -> unit

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L529>`__



.. code-block:: ocaml

  val freeze_ancestors : attr Owl_graph.node array -> unit

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L531>`__



.. code-block:: ocaml

  val pack_arr : A.arr -> arr

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L533>`__



.. code-block:: ocaml

  val unpack_arr : arr -> A.arr

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L535>`__



.. code-block:: ocaml

  val pack_elt : A.elt -> elt

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L546>`__



.. code-block:: ocaml

  val unpack_elt : elt -> A.elt

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L548>`__



.. code-block:: ocaml

  val unsafe_assign_arr : arr -> A.arr -> unit

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L559>`__



.. code-block:: ocaml

  val assign_arr : arr -> A.arr -> unit

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L574>`__



.. code-block:: ocaml

  val assign_elt : elt -> A.elt -> unit

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L594>`__



.. code-block:: ocaml

  val float_to_elt : float -> elt

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L605>`__



.. code-block:: ocaml

  val elt_to_float : elt -> float

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/compute/owl_computation_symbol.ml#L607>`__



