Base.Maths
===============================================================================

This document is auto-generated for Owl's APIs.
#47 entries have been extracted.

Github:
`{Signature} <https://github.com/ryanrhymes/owl/tree/master/src/base/maths/owl_base_maths.mli>`_ 
`{Implementation} <https://github.com/ryanrhymes/owl/tree/master/src/base/maths/owl_base_maths.ml>`_



Basic functions
-------------------------------------------------------------------------------



.. code-block:: ocaml

  val add : float -> float -> float

``add x y``

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_maths.ml#L7>`__



.. code-block:: ocaml

  val sub : float -> float -> float

``sub x y``

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_maths.ml#L10>`__



.. code-block:: ocaml

  val mul : float -> float -> float

``mul x y``

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_maths.ml#L13>`__



.. code-block:: ocaml

  val div : float -> float -> float

``div x y``

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_maths.ml#L16>`__



.. code-block:: ocaml

  val atan2 : float -> float -> float

``atan2 x y``

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_maths.ml#L22>`__



.. code-block:: ocaml

  val abs : float -> float

``abs x``

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_maths.ml#L25>`__



.. code-block:: ocaml

  val neg : float -> float

``neg x``

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_maths.ml#L28>`__



.. code-block:: ocaml

  val floor : float -> float

``floor x``

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_maths.ml#L59>`__



.. code-block:: ocaml

  val ceil : float -> float

``ceil x``

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_maths.ml#L62>`__



.. code-block:: ocaml

  val round : float -> float

``round x``

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_maths.ml#L65>`__



.. code-block:: ocaml

  val trunc : float -> float

``trunc x``

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_maths.ml#L68>`__



.. code-block:: ocaml

  val sqr : float -> float

``sqr x``

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_maths.ml#L31>`__



.. code-block:: ocaml

  val sqrt : float -> float

``sqrt x``

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_maths.ml#L34>`__



.. code-block:: ocaml

  val pow : float -> float -> float

``pow x``

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_maths.ml#L19>`__



.. code-block:: ocaml

  val exp : float -> float

``exp x``

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_maths.ml#L37>`__



.. code-block:: ocaml

  val log : float -> float

``log x``

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_maths.ml#L40>`__



.. code-block:: ocaml

  val log2 : float -> float

``log2 x``

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_maths.ml#L43>`__



.. code-block:: ocaml

  val log10 : float -> float

``log10 x``

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_maths.ml#L46>`__



.. code-block:: ocaml

  val sigmoid : float -> float

``sigmod x``

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_maths.ml#L113>`__



.. code-block:: ocaml

  val signum : float -> float

``signum x``

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_maths.ml#L49>`__



.. code-block:: ocaml

  val relu : float -> float

``relu x``

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_maths.ml#L110>`__



.. code-block:: ocaml

  val sin : float -> float

``sin x``

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_maths.ml#L71>`__



.. code-block:: ocaml

  val cos : float -> float

``cos x``

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_maths.ml#L74>`__



.. code-block:: ocaml

  val tan : float -> float

``tan x``

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_maths.ml#L77>`__



.. code-block:: ocaml

  val asin : float -> float

``asin x``

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_maths.ml#L89>`__



.. code-block:: ocaml

  val acos : float -> float

``acos x``

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_maths.ml#L92>`__



.. code-block:: ocaml

  val atan : float -> float

``atan x``

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_maths.ml#L95>`__



.. code-block:: ocaml

  val sinh : float -> float

``sinh x``

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_maths.ml#L80>`__



.. code-block:: ocaml

  val cosh : float -> float

``cosh x``

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_maths.ml#L83>`__



.. code-block:: ocaml

  val tanh : float -> float

``tanh x``

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_maths.ml#L86>`__



.. code-block:: ocaml

  val asinh : float -> float

``asinh x``

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_maths.ml#L99>`__



.. code-block:: ocaml

  val acosh : float -> float

``acosh x``

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_maths.ml#L103>`__



.. code-block:: ocaml

  val atanh : float -> float

``atanh x``

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_maths.ml#L107>`__



Helper functions
-------------------------------------------------------------------------------



.. code-block:: ocaml

  val is_nan : float -> bool

``is_nan x`` returns ``true`` if ``x`` is ``nan``.

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_maths.ml#L118>`__



.. code-block:: ocaml

  val is_inf : float -> bool

``is_inf x`` returns ``true`` if ``x`` is ``infinity`` or ``neg_infinity``.

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_maths.ml#L121>`__



.. code-block:: ocaml

  val is_normal : float -> bool

``is_normal x`` returns ``true`` if ``x`` is a normal float number.

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_maths.ml#L124>`__



.. code-block:: ocaml

  val is_subnormal : float -> bool

``is_nan x`` returns ``true`` if ``x`` is subnormal float number.

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_maths.ml#L127>`__



.. code-block:: ocaml

  val is_odd : int -> bool

``is_odd x`` returns ``true`` if ``x`` is odd.

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_maths.ml#L130>`__



.. code-block:: ocaml

  val is_even : int -> bool

``is_even x`` returns ``true`` if ``x`` is even.

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_maths.ml#L133>`__



.. code-block:: ocaml

  val is_pow2 : int -> bool

``is_pow2 x`` return ``true`` if ``x`` is integer power of 2, e.g. 32, 64, etc.

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_maths.ml#L136>`__



.. code-block:: ocaml

  val same_sign : float -> float -> bool

``same_sign x y`` returns ``true`` if ``x`` and ``y`` have the same sign,
otherwise it returns ``false``. Positive and negative zeros are special cases
and always returns ``true``.

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_maths.ml#L139>`__



.. code-block:: ocaml

  val is_simplex : float array -> bool

``is_simplex x`` checks whether ``x`` is simplex. In other words,
:math:`\sum_i^K x_i = 1` and :math:`x_i \ge 0, \forall x_i \in [1,K]`.

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_maths.ml#L145>`__



.. code-block:: ocaml

  val is_sqr : int -> bool

``is_sqr x`` checks if ``x`` is the square of an integer.

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_maths.ml#L167>`__



.. code-block:: ocaml

  val is_prime : int -> bool

``is_prime x`` returns ``true`` if ``x`` is a prime number. The function is
deterministic for numbers below 341550071728321, then becomes probabilistic
for those above. The function uses Rabinâ€“Miller primality test.

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_maths.ml#L185>`__



.. code-block:: ocaml

  val fermat_fact : int -> int * int

``fermat_fact x`` performs Fermat factorisation over ``x``, i.e. into two
roughly equal factors. ``x`` must be an odd number.

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_maths.ml#L170>`__



