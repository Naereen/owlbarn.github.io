Base.Complex
===============================================================================

This document is auto-generated for Owl's APIs.
#82 entries have been extracted.

Github:
`{Signature} <https://github.com/ryanrhymes/owl/tree/master/src/base/maths/owl_base_complex.mli>`_ 
`{Implementation} <https://github.com/ryanrhymes/owl/tree/master/src/base/maths/owl_base_complex.ml>`_



Type definition and constants
-------------------------------------------------------------------------------



.. code-block:: ocaml

  type t = Complex.t
    

Type definition of a complex number.

.. code-block:: ocaml

  val zero : t

Constant value zero.

.. code-block:: ocaml

  val one : t

Constant value one.

.. code-block:: ocaml

  val i : t

Constant value i.

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L20>`__



Unary functions
-------------------------------------------------------------------------------



.. code-block:: ocaml

  val neg : t -> t

TODO

.. code-block:: ocaml

  val abs : t -> float

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L8>`__



.. code-block:: ocaml

  val abs2 : t -> float

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L10>`__



.. code-block:: ocaml

  val logabs : t -> float

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L18>`__



.. code-block:: ocaml

  val conj : t -> t

TODO

.. code-block:: ocaml

  val inv : t -> t

TODO

.. code-block:: ocaml

  val sqrt : t -> t

TODO

.. code-block:: ocaml

  val exp : t -> t

TODO

.. code-block:: ocaml

  val exp2 : t -> t

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L12>`__



.. code-block:: ocaml

  val exp10 : t -> t

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L14>`__



.. code-block:: ocaml

  val expm1 : t -> t

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L16>`__



.. code-block:: ocaml

  val log : t -> t

TODO

.. code-block:: ocaml

  val log2 : t -> t

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L25>`__



.. code-block:: ocaml

  val log10 : t -> t

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L27>`__



.. code-block:: ocaml

  val log1p : t -> t

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L29>`__



.. code-block:: ocaml

  val sin : t -> t

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L47>`__



.. code-block:: ocaml

  val cos : t -> t

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L53>`__



.. code-block:: ocaml

  val tan : t -> t

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L60>`__



.. code-block:: ocaml

  val cot : t -> t

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L72>`__



.. code-block:: ocaml

  val sec : t -> t

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L74>`__



.. code-block:: ocaml

  val csc : t -> t

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L76>`__



.. code-block:: ocaml

  val sinh : t -> t

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L78>`__



.. code-block:: ocaml

  val cosh : t -> t

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L83>`__



.. code-block:: ocaml

  val tanh : t -> t

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L88>`__



.. code-block:: ocaml

  val sech : t -> t

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L100>`__



.. code-block:: ocaml

  val csch : t -> t

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L102>`__



.. code-block:: ocaml

  val coth : t -> t

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L104>`__



.. code-block:: ocaml

  val asin : t -> t

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L106>`__



.. code-block:: ocaml

  val acos : t -> t

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L146>`__



.. code-block:: ocaml

  val atan : t -> t

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L186>`__



.. code-block:: ocaml

  val asec : t -> t

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L210>`__



.. code-block:: ocaml

  val acsc : t -> t

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L212>`__



.. code-block:: ocaml

  val acot : t -> t

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L214>`__



.. code-block:: ocaml

  val asinh : t -> t

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L218>`__



.. code-block:: ocaml

  val acosh : t -> t

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L220>`__



.. code-block:: ocaml

  val atanh : t -> t

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L226>`__



.. code-block:: ocaml

  val asech : t -> t

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L234>`__



.. code-block:: ocaml

  val acsch : t -> t

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L236>`__



.. code-block:: ocaml

  val acoth : t -> t

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L238>`__



.. code-block:: ocaml

  val arg : t -> float

``arg x`` returns the angle of a complex number ``x``.

.. code-block:: ocaml

  val phase : t -> float

``phase x`` returns the phase of a complex number ``x``.

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L240>`__



.. code-block:: ocaml

  val floor : t -> t

``floor x``

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L250>`__



.. code-block:: ocaml

  val ceil : t -> t

``ceil x``

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L248>`__



.. code-block:: ocaml

  val round : t -> t

``round x``

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L252>`__



.. code-block:: ocaml

  val trunc : t -> t

``trunc x``

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L254>`__



.. code-block:: ocaml

  val fix : t -> t

``fix x``

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L256>`__



Binary functions
-------------------------------------------------------------------------------



.. code-block:: ocaml

  val add : t -> t -> t

TODO

.. code-block:: ocaml

  val sub : t -> t -> t

TODO

.. code-block:: ocaml

  val mul : t -> t -> t

TODO

.. code-block:: ocaml

  val div : t -> t -> t

TODO

.. code-block:: ocaml

  val add_re : t -> float -> t

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L31>`__



.. code-block:: ocaml

  val add_im : t -> float -> t

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L33>`__



.. code-block:: ocaml

  val sub_re : t -> float -> t

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L35>`__



.. code-block:: ocaml

  val sub_im : t -> float -> t

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L37>`__



.. code-block:: ocaml

  val mul_re : t -> float -> t

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L39>`__



.. code-block:: ocaml

  val mul_im : t -> float -> t

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L41>`__



.. code-block:: ocaml

  val div_re : t -> float -> t

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L43>`__



.. code-block:: ocaml

  val div_im : t -> float -> t

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L45>`__



.. code-block:: ocaml

  val pow : t -> t -> t

TODO

.. code-block:: ocaml

  val polar : float -> float -> t

TODO

.. code-block:: ocaml

  val rect : float -> float -> t

``rect r phi`` return a complex number with polar coordinates ``r`` and ``phi``.

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L242>`__



Comparison functions
-------------------------------------------------------------------------------



.. code-block:: ocaml

  val equal : t -> t -> bool

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L260>`__



.. code-block:: ocaml

  val not_equal : t -> t -> bool

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L262>`__



.. code-block:: ocaml

  val less : t -> t -> bool

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L264>`__



.. code-block:: ocaml

  val greater : t -> t -> bool

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L270>`__



.. code-block:: ocaml

  val less_equal : t -> t -> bool

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L276>`__



.. code-block:: ocaml

  val greater_equal : t -> t -> bool

TODO

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L278>`__



Helper functions
-------------------------------------------------------------------------------



.. code-block:: ocaml

  val complex : float -> float -> t

``complex re im`` returns a complex number ``{re; im}``.

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L282>`__



.. code-block:: ocaml

  val of_tuple : float * float -> t

``of_tuple (re, im)`` returns a complex number ``{re; im}``.

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L284>`__



.. code-block:: ocaml

  val to_tuple : t -> float * float

``to_tuple x`` converts a complex number to tuple ``(x.re; x.im)``.

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L289>`__



.. code-block:: ocaml

  val is_nan : t -> bool

``is_nan x`` returns ``true`` if ``x.re`` is ``nan`` or ``x.im`` is ``nan``.

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L291>`__



.. code-block:: ocaml

  val is_inf : t -> bool

``is_inf x`` returns ``true`` if either ``x.re`` or ``x.im`` is ``infinity`` or ``neg_infinity``.

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L293>`__



.. code-block:: ocaml

  val is_normal : t -> bool

``is_normal x`` returns ``true`` if both ``x.re`` and ``x.im`` are ``normal``.

`source code <https://github.com/ryanrhymes/owl/blob/master/src/base/maths/owl_base_complex.ml#L295>`__



