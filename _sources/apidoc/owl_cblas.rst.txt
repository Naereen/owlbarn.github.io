High-level CBLAS API
===============================================================================

This document is auto-generated for Owl's APIs.
#18 entries have been extracted.

Github:
`{Signature} <https://github.com/ryanrhymes/owl/tree/master/src/owl/cblas/owl_cblas.mli>`_ 
`{Implementation} <https://github.com/ryanrhymes/owl/tree/master/src/owl/cblas/owl_cblas.ml>`_



Type definition
-------------------------------------------------------------------------------



.. code-block:: ocaml

  type ('a, 'b) t = ('a, 'b, c_layout) Genarray.t
    

The default type is Bigarray's Genarray.

.. code-block:: ocaml

  type side = Owl_cblas_basic.cblas_side
    

Upper or lower triangular matrix.

.. code-block:: ocaml

  type uplo = Owl_cblas_basic.cblas_uplo
    

Side type

Level-1 BLAS: vector-vector operations
-------------------------------------------------------------------------------



Level-2 BLAS: matrix-vector operations
-------------------------------------------------------------------------------



.. code-block:: ocaml

  val gemv : ?trans:bool -> ?incx:int -> ?incy:int -> ?alpha:'a -> ?beta:'a -> a:('a, 'b) t -> x:('a, 'b) t -> y:('a, 'b) t -> unit

Computes a matrix-vector product using a general matrix

`source code <https://github.com/ryanrhymes/owl/blob/master/src/owl/cblas/owl_cblas.ml#L56>`__



.. code-block:: ocaml

  val gbmv : ?trans:bool -> ?incx:int -> ?incy:int -> ?alpha:'a -> ?beta:'a -> kl:int -> ku:int -> a:('a, 'b) t -> x:('a, 'b) t -> y:('a, 'b) t -> unit

Computes a matrix-vector product using a general band matrix

`source code <https://github.com/ryanrhymes/owl/blob/master/src/owl/cblas/owl_cblas.ml#L79>`__



Level-3 BLAS: matrix-matrix operations
-------------------------------------------------------------------------------



.. code-block:: ocaml

  val gemm : ?transa:bool -> ?transb:bool -> ?alpha:'a -> ?beta:'a -> a:('a, 'b) t -> b:('a, 'b) t -> c:('a, 'b) t -> unit

Computes a matrix-matrix product with general matrices.

`source code <https://github.com/ryanrhymes/owl/blob/master/src/owl/cblas/owl_cblas.ml#L105>`__



.. code-block:: ocaml

  val symm : ?side:side -> ?uplo:uplo -> ?alpha:'a -> ?beta:'a -> a:('a, 'b) t -> b:('a, 'b) t -> c:('a, 'b) t -> unit

Computes a matrix-matrix product where one input matrix is symmetric.

`source code <https://github.com/ryanrhymes/owl/blob/master/src/owl/cblas/owl_cblas.ml#L138>`__



.. code-block:: ocaml

  val syrk : ?uplo:uplo -> ?trans:bool -> ?alpha:'a -> ?beta:'a -> a:('a, 'b) t -> c:('a, 'b) t -> unit

Performs a symmetric rank-k update.

`source code <https://github.com/ryanrhymes/owl/blob/master/src/owl/cblas/owl_cblas.ml#L171>`__



.. code-block:: ocaml

  val syr2k : ?uplo:uplo -> ?trans:bool -> ?alpha:'a -> ?beta:'a -> a:('a, 'b) t -> b:('a, 'b) t -> c:('a, 'b) t -> unit

Performs a symmetric rank-2k update.

`source code <https://github.com/ryanrhymes/owl/blob/master/src/owl/cblas/owl_cblas.ml#L199>`__



.. code-block:: ocaml

  val trmm : ?side:side -> ?uplo:uplo -> ?transa:bool -> ?diag:bool -> ?alpha:'a -> a:('a, 'b) t -> b:('a, 'b) t -> unit

Computes a matrix-matrix product where one input matrix is triangular.

`source code <https://github.com/ryanrhymes/owl/blob/master/src/owl/cblas/owl_cblas.ml#L232>`__



.. code-block:: ocaml

  val trsm : ?side:side -> ?uplo:uplo -> ?transa:bool -> ?diag:bool -> ?alpha:'a -> a:('a, 'b) t -> b:('a, 'b) t -> unit

Solves a triangular matrix equation.

`source code <https://github.com/ryanrhymes/owl/blob/master/src/owl/cblas/owl_cblas.ml#L257>`__



.. code-block:: ocaml

  val hemm : ?side:side -> ?uplo:uplo -> ?alpha:Complex.t -> ?beta:Complex.t -> a:(Complex.t, 'a) t -> b:(Complex.t, 'a) t -> c:(Complex.t, 'a) t -> unit

Computes a matrix-matrix product where one input matrix is Hermitian.

`source code <https://github.com/ryanrhymes/owl/blob/master/src/owl/cblas/owl_cblas.ml#L282>`__



.. code-block:: ocaml

  val herk : ?uplo:uplo -> ?trans:bool -> ?alpha:float -> ?beta:float -> a:(Complex.t, 'a) t -> c:(Complex.t, 'a) t -> unit

Performs a Hermitian rank-k update.

`source code <https://github.com/ryanrhymes/owl/blob/master/src/owl/cblas/owl_cblas.ml#L310>`__



.. code-block:: ocaml

  val her2k : ?uplo:uplo -> ?trans:bool -> ?alpha:Complex.t -> ?beta:float -> a:(Complex.t, 'a) t -> b:(Complex.t, 'a) t -> c:(Complex.t, 'a) t -> unit

Performs a Hermitian rank-2k update.

`source code <https://github.com/ryanrhymes/owl/blob/master/src/owl/cblas/owl_cblas.ml#L332>`__



